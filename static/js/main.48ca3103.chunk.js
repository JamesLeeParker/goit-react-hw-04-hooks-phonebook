(this["webpackJsonpgoit-react-hw-04-hooks-phonebook"]=this["webpackJsonpgoit-react-hw-04-hooks-phonebook"]||[]).push([[0],{15:function(e,t,n){},16:function(e,t,n){"use strict";n.r(t);var a=n(1),c=n.n(a),r=n(6),o=n.n(r),i=n(8),s=n(5),l=n(9),u=n(0);function d(e){var t=e.contacts,n=e.delContact,a=function(e){var t=e.target.closest("li").getAttribute("id");return n(t)};return t.map((function(e){var t=e.id,n=e.name,c=e.number;return Object(u.jsxs)("li",{id:t,children:[Object(u.jsx)("span",{children:n}),": ",Object(u.jsx)("span",{children:c}),Object(u.jsx)("button",{type:"button",onClick:a,children:"delete"})]},t)}))}function j(e){var t=e.label,n=void 0===t?"":t,a=e.value,c=e.onFilterChange;return Object(u.jsx)("div",{children:Object(u.jsxs)("label",{children:[n,Object(u.jsx)("input",{type:"text",value:a,onChange:function(e){return c(e.target.value)}})]})})}n(15);function b(e){var t=e.value;return Object(u.jsxs)("form",{onSubmit:t,children:[Object(u.jsx)("h2",{children:"Name contact"}),Object(u.jsxs)("label",{children:[Object(u.jsx)("p",{children:"Name:"}),Object(u.jsx)("input",{type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]}),Object(u.jsxs)("label",{children:[Object(u.jsx)("p",{children:"Phone number:"}),Object(u.jsx)("input",{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0})]}),Object(u.jsx)("button",{children:"Add contact"})]})}var h=n(7),O=n.n(h),p=function(e){var t=e.contacts,n=e.delContact,a=e.addContact,c=e.filter,r=e.onFilterChange;return Object(u.jsxs)("div",{className:O.a.wrapper,children:[Object(u.jsx)("h1",{children:"Phonebook"}),Object(u.jsx)(b,{value:a}),Object(u.jsx)("h1",{children:"Contacts"}),Object(u.jsx)(j,{value:c,label:"Finde contact by name:",onFilterChange:r}),Object(u.jsx)("ul",{children:Object(u.jsx)(d,{contacts:t,delContact:n})})]})},f="contacts",x=function(){var e=Object(a.useState)([]),t=Object(s.a)(e,2),n=t[0],c=t[1],r=Object(a.useState)(""),o=Object(s.a)(r,2),d=o[0],j=o[1];Object(a.useEffect)((function(){var e=function(e){try{return JSON.parse(localStorage.getItem(e))}catch(t){return null}}(f);e&&c(e)}),[]),Object(a.useEffect)((function(e){!function(e,t){try{localStorage.setItem(e,JSON.stringify(t))}catch(n){return null}}(f,e)}),[n]);return Object(u.jsx)("div",{children:Object(u.jsx)(p,{contacts:function(){var e=d.toLowerCase();return n.filter((function(t){return t.name.toLowerCase().includes(e)}))}(),addContact:function(e){e.preventDefault();var t,a={id:Object(l.a)(),name:e.target[0].value,number:e.target[1].value};return e.target[0].value="",e.target[1].value="",n.find((function(e){return e.name.toLowerCase()===a.name.toLowerCase()}))?alert("NO!"):(t=a,void c([].concat(Object(i.a)(n),[t])))},delContact:function(e){var t=n.filter((function(t){return t.id!==e}));c(t)},onFilterChange:function(e){j(e)}})})};o.a.render(Object(u.jsx)(c.a.StrictMode,{children:Object(u.jsx)(x,{})}),document.getElementById("root"))},7:function(e,t,n){e.exports={wrapper:"Phonebook_wrapper__1cYkl"}}},[[16,1,2]]]);
//# sourceMappingURL=main.48ca3103.chunk.js.map